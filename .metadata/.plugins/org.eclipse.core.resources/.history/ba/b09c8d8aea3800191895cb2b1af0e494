package util;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

public class Hibernate {
	private static SessionFactory sessionFactory;
	static {
		//1.从 hibernate.cfg.xml 读取配置信息
		final StandardServiceRegistry registry 
	    = new StandardServiceRegistryBuilder()
	        .configure() // 从hibernate.cfg.xml读取配置信息
	        .build();    // 创建StandardServiceRegistry

		//2.SessionFactory 会话工厂的作用。
		//	缓存Hibernate配置信息和映射元数据信息；
		//	负责创建Session实例
		try {
		    sessionFactory = new MetadataSources(registry)
		        .buildMetadata().buildSessionFactory();
		} catch (Exception e) {
		    // 创建失败手动释放
		    StandardServiceRegistryBuilder.destroy(registry);
		}

	}
	//打开session
	public static Session openSession() {
		
		return sessionFactory.openSession();
		
	}
}
